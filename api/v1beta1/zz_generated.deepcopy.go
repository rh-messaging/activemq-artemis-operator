//go:build !ignore_autogenerated

/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/api/core/v1"
	policyv1 "k8s.io/api/policy/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AcceptorType) DeepCopyInto(out *AcceptorType) {
	*out = *in
	if in.ExposeMode != nil {
		in, out := &in.ExposeMode, &out.ExposeMode
		*out = new(ExposeMode)
		**out = **in
	}
	if in.SupportAdvisory != nil {
		in, out := &in.SupportAdvisory, &out.SupportAdvisory
		*out = new(bool)
		**out = **in
	}
	if in.SuppressInternalManagementObjects != nil {
		in, out := &in.SuppressInternalManagementObjects, &out.SuppressInternalManagementObjects
		*out = new(bool)
		**out = **in
	}
	if in.BindToAllInterfaces != nil {
		in, out := &in.BindToAllInterfaces, &out.BindToAllInterfaces
		*out = new(bool)
		**out = **in
	}
	if in.TrustSecret != nil {
		in, out := &in.TrustSecret, &out.TrustSecret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AcceptorType.
func (in *AcceptorType) DeepCopy() *AcceptorType {
	if in == nil {
		return nil
	}
	out := new(AcceptorType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemis) DeepCopyInto(out *ActiveMQArtemis) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemis.
func (in *ActiveMQArtemis) DeepCopy() *ActiveMQArtemis {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemis)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveMQArtemis) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisAddress) DeepCopyInto(out *ActiveMQArtemisAddress) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisAddress.
func (in *ActiveMQArtemisAddress) DeepCopy() *ActiveMQArtemisAddress {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveMQArtemisAddress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisAddressList) DeepCopyInto(out *ActiveMQArtemisAddressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveMQArtemisAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisAddressList.
func (in *ActiveMQArtemisAddressList) DeepCopy() *ActiveMQArtemisAddressList {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisAddressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveMQArtemisAddressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisAddressSpec) DeepCopyInto(out *ActiveMQArtemisAddressSpec) {
	*out = *in
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
	if in.RoutingType != nil {
		in, out := &in.RoutingType, &out.RoutingType
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.QueueConfiguration != nil {
		in, out := &in.QueueConfiguration, &out.QueueConfiguration
		*out = new(QueueConfigurationType)
		(*in).DeepCopyInto(*out)
	}
	if in.ApplyToCrNames != nil {
		in, out := &in.ApplyToCrNames, &out.ApplyToCrNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisAddressSpec.
func (in *ActiveMQArtemisAddressSpec) DeepCopy() *ActiveMQArtemisAddressSpec {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisAddressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisAddressStatus) DeepCopyInto(out *ActiveMQArtemisAddressStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisAddressStatus.
func (in *ActiveMQArtemisAddressStatus) DeepCopy() *ActiveMQArtemisAddressStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisAddressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisList) DeepCopyInto(out *ActiveMQArtemisList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveMQArtemis, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisList.
func (in *ActiveMQArtemisList) DeepCopy() *ActiveMQArtemisList {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveMQArtemisList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisScaledown) DeepCopyInto(out *ActiveMQArtemisScaledown) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisScaledown.
func (in *ActiveMQArtemisScaledown) DeepCopy() *ActiveMQArtemisScaledown {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisScaledown)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveMQArtemisScaledown) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisScaledownList) DeepCopyInto(out *ActiveMQArtemisScaledownList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveMQArtemisScaledown, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisScaledownList.
func (in *ActiveMQArtemisScaledownList) DeepCopy() *ActiveMQArtemisScaledownList {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisScaledownList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveMQArtemisScaledownList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisScaledownSpec) DeepCopyInto(out *ActiveMQArtemisScaledownSpec) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisScaledownSpec.
func (in *ActiveMQArtemisScaledownSpec) DeepCopy() *ActiveMQArtemisScaledownSpec {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisScaledownSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisScaledownStatus) DeepCopyInto(out *ActiveMQArtemisScaledownStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisScaledownStatus.
func (in *ActiveMQArtemisScaledownStatus) DeepCopy() *ActiveMQArtemisScaledownStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisScaledownStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisSecurity) DeepCopyInto(out *ActiveMQArtemisSecurity) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisSecurity.
func (in *ActiveMQArtemisSecurity) DeepCopy() *ActiveMQArtemisSecurity {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisSecurity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveMQArtemisSecurity) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisSecurityList) DeepCopyInto(out *ActiveMQArtemisSecurityList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ActiveMQArtemisSecurity, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisSecurityList.
func (in *ActiveMQArtemisSecurityList) DeepCopy() *ActiveMQArtemisSecurityList {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisSecurityList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ActiveMQArtemisSecurityList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisSecuritySpec) DeepCopyInto(out *ActiveMQArtemisSecuritySpec) {
	*out = *in
	in.LoginModules.DeepCopyInto(&out.LoginModules)
	in.SecurityDomains.DeepCopyInto(&out.SecurityDomains)
	in.SecuritySettings.DeepCopyInto(&out.SecuritySettings)
	if in.ApplyToCrNames != nil {
		in, out := &in.ApplyToCrNames, &out.ApplyToCrNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisSecuritySpec.
func (in *ActiveMQArtemisSecuritySpec) DeepCopy() *ActiveMQArtemisSecuritySpec {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisSecuritySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisSecurityStatus) DeepCopyInto(out *ActiveMQArtemisSecurityStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisSecurityStatus.
func (in *ActiveMQArtemisSecurityStatus) DeepCopy() *ActiveMQArtemisSecurityStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisSecurityStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisSpec) DeepCopyInto(out *ActiveMQArtemisSpec) {
	*out = *in
	in.DeploymentPlan.DeepCopyInto(&out.DeploymentPlan)
	if in.Acceptors != nil {
		in, out := &in.Acceptors, &out.Acceptors
		*out = make([]AcceptorType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Connectors != nil {
		in, out := &in.Connectors, &out.Connectors
		*out = make([]ConnectorType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Console.DeepCopyInto(&out.Console)
	out.Upgrades = in.Upgrades
	in.AddressSettings.DeepCopyInto(&out.AddressSettings)
	if in.BrokerProperties != nil {
		in, out := &in.BrokerProperties, &out.BrokerProperties
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceTemplates != nil {
		in, out := &in.ResourceTemplates, &out.ResourceTemplates
		*out = make([]ResourceTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Restricted != nil {
		in, out := &in.Restricted, &out.Restricted
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisSpec.
func (in *ActiveMQArtemisSpec) DeepCopy() *ActiveMQArtemisSpec {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisStatus) DeepCopyInto(out *ActiveMQArtemisStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.PodStatus.DeepCopyInto(&out.PodStatus)
	if in.ExternalConfigs != nil {
		in, out := &in.ExternalConfigs, &out.ExternalConfigs
		*out = make([]ExternalConfigStatus, len(*in))
		copy(*out, *in)
	}
	out.Version = in.Version
	out.Upgrade = in.Upgrade
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisStatus.
func (in *ActiveMQArtemisStatus) DeepCopy() *ActiveMQArtemisStatus {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActiveMQArtemisUpgrades) DeepCopyInto(out *ActiveMQArtemisUpgrades) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActiveMQArtemisUpgrades.
func (in *ActiveMQArtemisUpgrades) DeepCopy() *ActiveMQArtemisUpgrades {
	if in == nil {
		return nil
	}
	out := new(ActiveMQArtemisUpgrades)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressSettingType) DeepCopyInto(out *AddressSettingType) {
	*out = *in
	if in.DeadLetterAddress != nil {
		in, out := &in.DeadLetterAddress, &out.DeadLetterAddress
		*out = new(string)
		**out = **in
	}
	if in.AutoCreateDeadLetterResources != nil {
		in, out := &in.AutoCreateDeadLetterResources, &out.AutoCreateDeadLetterResources
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetterQueuePrefix != nil {
		in, out := &in.DeadLetterQueuePrefix, &out.DeadLetterQueuePrefix
		*out = new(string)
		**out = **in
	}
	if in.DeadLetterQueueSuffix != nil {
		in, out := &in.DeadLetterQueueSuffix, &out.DeadLetterQueueSuffix
		*out = new(string)
		**out = **in
	}
	if in.ExpiryAddress != nil {
		in, out := &in.ExpiryAddress, &out.ExpiryAddress
		*out = new(string)
		**out = **in
	}
	if in.AutoCreateExpiryResources != nil {
		in, out := &in.AutoCreateExpiryResources, &out.AutoCreateExpiryResources
		*out = new(bool)
		**out = **in
	}
	if in.ExpiryQueuePrefix != nil {
		in, out := &in.ExpiryQueuePrefix, &out.ExpiryQueuePrefix
		*out = new(string)
		**out = **in
	}
	if in.ExpiryQueueSuffix != nil {
		in, out := &in.ExpiryQueueSuffix, &out.ExpiryQueueSuffix
		*out = new(string)
		**out = **in
	}
	if in.ExpiryDelay != nil {
		in, out := &in.ExpiryDelay, &out.ExpiryDelay
		*out = new(int32)
		**out = **in
	}
	if in.MinExpiryDelay != nil {
		in, out := &in.MinExpiryDelay, &out.MinExpiryDelay
		*out = new(int32)
		**out = **in
	}
	if in.MaxExpiryDelay != nil {
		in, out := &in.MaxExpiryDelay, &out.MaxExpiryDelay
		*out = new(int32)
		**out = **in
	}
	if in.RedeliveryDelay != nil {
		in, out := &in.RedeliveryDelay, &out.RedeliveryDelay
		*out = new(int32)
		**out = **in
	}
	if in.MaxRedeliveryDelay != nil {
		in, out := &in.MaxRedeliveryDelay, &out.MaxRedeliveryDelay
		*out = new(int32)
		**out = **in
	}
	if in.MaxDeliveryAttempts != nil {
		in, out := &in.MaxDeliveryAttempts, &out.MaxDeliveryAttempts
		*out = new(int32)
		**out = **in
	}
	if in.MaxSizeBytes != nil {
		in, out := &in.MaxSizeBytes, &out.MaxSizeBytes
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeBytesRejectThreshold != nil {
		in, out := &in.MaxSizeBytesRejectThreshold, &out.MaxSizeBytesRejectThreshold
		*out = new(int32)
		**out = **in
	}
	if in.PageSizeBytes != nil {
		in, out := &in.PageSizeBytes, &out.PageSizeBytes
		*out = new(string)
		**out = **in
	}
	if in.PageMaxCacheSize != nil {
		in, out := &in.PageMaxCacheSize, &out.PageMaxCacheSize
		*out = new(int32)
		**out = **in
	}
	if in.AddressFullPolicy != nil {
		in, out := &in.AddressFullPolicy, &out.AddressFullPolicy
		*out = new(string)
		**out = **in
	}
	if in.MessageCounterHistoryDayLimit != nil {
		in, out := &in.MessageCounterHistoryDayLimit, &out.MessageCounterHistoryDayLimit
		*out = new(int32)
		**out = **in
	}
	if in.LastValueQueue != nil {
		in, out := &in.LastValueQueue, &out.LastValueQueue
		*out = new(bool)
		**out = **in
	}
	if in.DefaultLastValueQueue != nil {
		in, out := &in.DefaultLastValueQueue, &out.DefaultLastValueQueue
		*out = new(bool)
		**out = **in
	}
	if in.DefaultLastValueKey != nil {
		in, out := &in.DefaultLastValueKey, &out.DefaultLastValueKey
		*out = new(string)
		**out = **in
	}
	if in.DefaultNonDestructive != nil {
		in, out := &in.DefaultNonDestructive, &out.DefaultNonDestructive
		*out = new(bool)
		**out = **in
	}
	if in.DefaultExclusiveQueue != nil {
		in, out := &in.DefaultExclusiveQueue, &out.DefaultExclusiveQueue
		*out = new(bool)
		**out = **in
	}
	if in.DefaultGroupRebalance != nil {
		in, out := &in.DefaultGroupRebalance, &out.DefaultGroupRebalance
		*out = new(bool)
		**out = **in
	}
	if in.DefaultGroupRebalancePauseDispatch != nil {
		in, out := &in.DefaultGroupRebalancePauseDispatch, &out.DefaultGroupRebalancePauseDispatch
		*out = new(bool)
		**out = **in
	}
	if in.DefaultGroupBuckets != nil {
		in, out := &in.DefaultGroupBuckets, &out.DefaultGroupBuckets
		*out = new(int32)
		**out = **in
	}
	if in.DefaultGroupFirstKey != nil {
		in, out := &in.DefaultGroupFirstKey, &out.DefaultGroupFirstKey
		*out = new(string)
		**out = **in
	}
	if in.DefaultConsumersBeforeDispatch != nil {
		in, out := &in.DefaultConsumersBeforeDispatch, &out.DefaultConsumersBeforeDispatch
		*out = new(int32)
		**out = **in
	}
	if in.DefaultDelayBeforeDispatch != nil {
		in, out := &in.DefaultDelayBeforeDispatch, &out.DefaultDelayBeforeDispatch
		*out = new(int32)
		**out = **in
	}
	if in.RedistributionDelay != nil {
		in, out := &in.RedistributionDelay, &out.RedistributionDelay
		*out = new(int32)
		**out = **in
	}
	if in.SendToDlaOnNoRoute != nil {
		in, out := &in.SendToDlaOnNoRoute, &out.SendToDlaOnNoRoute
		*out = new(bool)
		**out = **in
	}
	if in.SlowConsumerThreshold != nil {
		in, out := &in.SlowConsumerThreshold, &out.SlowConsumerThreshold
		*out = new(int32)
		**out = **in
	}
	if in.SlowConsumerPolicy != nil {
		in, out := &in.SlowConsumerPolicy, &out.SlowConsumerPolicy
		*out = new(string)
		**out = **in
	}
	if in.SlowConsumerCheckPeriod != nil {
		in, out := &in.SlowConsumerCheckPeriod, &out.SlowConsumerCheckPeriod
		*out = new(int32)
		**out = **in
	}
	if in.AutoCreateJmsQueues != nil {
		in, out := &in.AutoCreateJmsQueues, &out.AutoCreateJmsQueues
		*out = new(bool)
		**out = **in
	}
	if in.AutoDeleteJmsQueues != nil {
		in, out := &in.AutoDeleteJmsQueues, &out.AutoDeleteJmsQueues
		*out = new(bool)
		**out = **in
	}
	if in.AutoCreateJmsTopics != nil {
		in, out := &in.AutoCreateJmsTopics, &out.AutoCreateJmsTopics
		*out = new(bool)
		**out = **in
	}
	if in.AutoDeleteJmsTopics != nil {
		in, out := &in.AutoDeleteJmsTopics, &out.AutoDeleteJmsTopics
		*out = new(bool)
		**out = **in
	}
	if in.AutoCreateQueues != nil {
		in, out := &in.AutoCreateQueues, &out.AutoCreateQueues
		*out = new(bool)
		**out = **in
	}
	if in.AutoDeleteQueues != nil {
		in, out := &in.AutoDeleteQueues, &out.AutoDeleteQueues
		*out = new(bool)
		**out = **in
	}
	if in.AutoDeleteCreatedQueues != nil {
		in, out := &in.AutoDeleteCreatedQueues, &out.AutoDeleteCreatedQueues
		*out = new(bool)
		**out = **in
	}
	if in.AutoDeleteQueuesDelay != nil {
		in, out := &in.AutoDeleteQueuesDelay, &out.AutoDeleteQueuesDelay
		*out = new(int32)
		**out = **in
	}
	if in.AutoDeleteQueuesMessageCount != nil {
		in, out := &in.AutoDeleteQueuesMessageCount, &out.AutoDeleteQueuesMessageCount
		*out = new(int32)
		**out = **in
	}
	if in.ConfigDeleteQueues != nil {
		in, out := &in.ConfigDeleteQueues, &out.ConfigDeleteQueues
		*out = new(string)
		**out = **in
	}
	if in.AutoCreateAddresses != nil {
		in, out := &in.AutoCreateAddresses, &out.AutoCreateAddresses
		*out = new(bool)
		**out = **in
	}
	if in.AutoDeleteAddresses != nil {
		in, out := &in.AutoDeleteAddresses, &out.AutoDeleteAddresses
		*out = new(bool)
		**out = **in
	}
	if in.AutoDeleteAddressesDelay != nil {
		in, out := &in.AutoDeleteAddressesDelay, &out.AutoDeleteAddressesDelay
		*out = new(int32)
		**out = **in
	}
	if in.ConfigDeleteAddresses != nil {
		in, out := &in.ConfigDeleteAddresses, &out.ConfigDeleteAddresses
		*out = new(string)
		**out = **in
	}
	if in.ManagementBrowsePageSize != nil {
		in, out := &in.ManagementBrowsePageSize, &out.ManagementBrowsePageSize
		*out = new(int32)
		**out = **in
	}
	if in.DefaultPurgeOnNoConsumers != nil {
		in, out := &in.DefaultPurgeOnNoConsumers, &out.DefaultPurgeOnNoConsumers
		*out = new(bool)
		**out = **in
	}
	if in.DefaultMaxConsumers != nil {
		in, out := &in.DefaultMaxConsumers, &out.DefaultMaxConsumers
		*out = new(int32)
		**out = **in
	}
	if in.DefaultQueueRoutingType != nil {
		in, out := &in.DefaultQueueRoutingType, &out.DefaultQueueRoutingType
		*out = new(string)
		**out = **in
	}
	if in.DefaultAddressRoutingType != nil {
		in, out := &in.DefaultAddressRoutingType, &out.DefaultAddressRoutingType
		*out = new(string)
		**out = **in
	}
	if in.DefaultConsumerWindowSize != nil {
		in, out := &in.DefaultConsumerWindowSize, &out.DefaultConsumerWindowSize
		*out = new(int32)
		**out = **in
	}
	if in.DefaultRingSize != nil {
		in, out := &in.DefaultRingSize, &out.DefaultRingSize
		*out = new(int32)
		**out = **in
	}
	if in.RetroactiveMessageCount != nil {
		in, out := &in.RetroactiveMessageCount, &out.RetroactiveMessageCount
		*out = new(int32)
		**out = **in
	}
	if in.EnableMetrics != nil {
		in, out := &in.EnableMetrics, &out.EnableMetrics
		*out = new(bool)
		**out = **in
	}
	if in.ManagementMessageAttributeSizeLimit != nil {
		in, out := &in.ManagementMessageAttributeSizeLimit, &out.ManagementMessageAttributeSizeLimit
		*out = new(int32)
		**out = **in
	}
	if in.SlowConsumerThresholdMeasurementUnit != nil {
		in, out := &in.SlowConsumerThresholdMeasurementUnit, &out.SlowConsumerThresholdMeasurementUnit
		*out = new(string)
		**out = **in
	}
	if in.EnableIngressTimestamp != nil {
		in, out := &in.EnableIngressTimestamp, &out.EnableIngressTimestamp
		*out = new(bool)
		**out = **in
	}
	if in.ConfigDeleteDiverts != nil {
		in, out := &in.ConfigDeleteDiverts, &out.ConfigDeleteDiverts
		*out = new(string)
		**out = **in
	}
	if in.MaxSizeMessages != nil {
		in, out := &in.MaxSizeMessages, &out.MaxSizeMessages
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressSettingType.
func (in *AddressSettingType) DeepCopy() *AddressSettingType {
	if in == nil {
		return nil
	}
	out := new(AddressSettingType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressSettingsType) DeepCopyInto(out *AddressSettingsType) {
	*out = *in
	if in.ApplyRule != nil {
		in, out := &in.ApplyRule, &out.ApplyRule
		*out = new(string)
		**out = **in
	}
	if in.AddressSetting != nil {
		in, out := &in.AddressSetting, &out.AddressSetting
		*out = make([]AddressSettingType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressSettingsType.
func (in *AddressSettingsType) DeepCopy() *AddressSettingsType {
	if in == nil {
		return nil
	}
	out := new(AddressSettingsType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AffinityConfig) DeepCopyInto(out *AffinityConfig) {
	*out = *in
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = new(v1.NodeAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAffinity != nil {
		in, out := &in.PodAffinity, &out.PodAffinity
		*out = new(v1.PodAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.PodAntiAffinity != nil {
		in, out := &in.PodAntiAffinity, &out.PodAntiAffinity
		*out = new(v1.PodAntiAffinity)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AffinityConfig.
func (in *AffinityConfig) DeepCopy() *AffinityConfig {
	if in == nil {
		return nil
	}
	out := new(AffinityConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedListEntryType) DeepCopyInto(out *AllowedListEntryType) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedListEntryType.
func (in *AllowedListEntryType) DeepCopy() *AllowedListEntryType {
	if in == nil {
		return nil
	}
	out := new(AllowedListEntryType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorisationConfigType) DeepCopyInto(out *AuthorisationConfigType) {
	*out = *in
	if in.AllowedList != nil {
		in, out := &in.AllowedList, &out.AllowedList
		*out = make([]AllowedListEntryType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultAccess != nil {
		in, out := &in.DefaultAccess, &out.DefaultAccess
		*out = make([]DefaultAccessType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RoleAccess != nil {
		in, out := &in.RoleAccess, &out.RoleAccess
		*out = make([]RoleAccessType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorisationConfigType.
func (in *AuthorisationConfigType) DeepCopy() *AuthorisationConfigType {
	if in == nil {
		return nil
	}
	out := new(AuthorisationConfigType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokerDomainType) DeepCopyInto(out *BrokerDomainType) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.LoginModules != nil {
		in, out := &in.LoginModules, &out.LoginModules
		*out = make([]LoginModuleReferenceType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokerDomainType.
func (in *BrokerDomainType) DeepCopy() *BrokerDomainType {
	if in == nil {
		return nil
	}
	out := new(BrokerDomainType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokerSecuritySettingType) DeepCopyInto(out *BrokerSecuritySettingType) {
	*out = *in
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]PermissionType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokerSecuritySettingType.
func (in *BrokerSecuritySettingType) DeepCopy() *BrokerSecuritySettingType {
	if in == nil {
		return nil
	}
	out := new(BrokerSecuritySettingType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorConfigType) DeepCopyInto(out *ConnectorConfigType) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int32)
		**out = **in
	}
	if in.RmiRegistryPort != nil {
		in, out := &in.RmiRegistryPort, &out.RmiRegistryPort
		*out = new(int32)
		**out = **in
	}
	if in.JmxRealm != nil {
		in, out := &in.JmxRealm, &out.JmxRealm
		*out = new(string)
		**out = **in
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.AuthenticatorType != nil {
		in, out := &in.AuthenticatorType, &out.AuthenticatorType
		*out = new(string)
		**out = **in
	}
	if in.Secured != nil {
		in, out := &in.Secured, &out.Secured
		*out = new(bool)
		**out = **in
	}
	if in.KeyStoreType != nil {
		in, out := &in.KeyStoreType, &out.KeyStoreType
		*out = new(string)
		**out = **in
	}
	if in.KeyStoreProvider != nil {
		in, out := &in.KeyStoreProvider, &out.KeyStoreProvider
		*out = new(string)
		**out = **in
	}
	if in.KeyStorePath != nil {
		in, out := &in.KeyStorePath, &out.KeyStorePath
		*out = new(string)
		**out = **in
	}
	if in.KeyStorePassword != nil {
		in, out := &in.KeyStorePassword, &out.KeyStorePassword
		*out = new(string)
		**out = **in
	}
	if in.TrustStoreType != nil {
		in, out := &in.TrustStoreType, &out.TrustStoreType
		*out = new(string)
		**out = **in
	}
	if in.TrustStoreProvider != nil {
		in, out := &in.TrustStoreProvider, &out.TrustStoreProvider
		*out = new(string)
		**out = **in
	}
	if in.TrustStorePath != nil {
		in, out := &in.TrustStorePath, &out.TrustStorePath
		*out = new(string)
		**out = **in
	}
	if in.TrustStorePassword != nil {
		in, out := &in.TrustStorePassword, &out.TrustStorePassword
		*out = new(string)
		**out = **in
	}
	if in.PasswordCodec != nil {
		in, out := &in.PasswordCodec, &out.PasswordCodec
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorConfigType.
func (in *ConnectorConfigType) DeepCopy() *ConnectorConfigType {
	if in == nil {
		return nil
	}
	out := new(ConnectorConfigType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectorType) DeepCopyInto(out *ConnectorType) {
	*out = *in
	if in.ExposeMode != nil {
		in, out := &in.ExposeMode, &out.ExposeMode
		*out = new(ExposeMode)
		**out = **in
	}
	if in.TrustSecret != nil {
		in, out := &in.TrustSecret, &out.TrustSecret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectorType.
func (in *ConnectorType) DeepCopy() *ConnectorType {
	if in == nil {
		return nil
	}
	out := new(ConnectorType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleType) DeepCopyInto(out *ConsoleType) {
	*out = *in
	if in.ExposeMode != nil {
		in, out := &in.ExposeMode, &out.ExposeMode
		*out = new(ExposeMode)
		**out = **in
	}
	if in.TrustSecret != nil {
		in, out := &in.TrustSecret, &out.TrustSecret
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleType.
func (in *ConsoleType) DeepCopy() *ConsoleType {
	if in == nil {
		return nil
	}
	out := new(ConsoleType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultAccessType) DeepCopyInto(out *DefaultAccessType) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultAccessType.
func (in *DefaultAccessType) DeepCopy() *DefaultAccessType {
	if in == nil {
		return nil
	}
	out := new(DefaultAccessType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentPlanType) DeepCopyInto(out *DeploymentPlanType) {
	*out = *in
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int32)
		**out = **in
	}
	if in.MessageMigration != nil {
		in, out := &in.MessageMigration, &out.MessageMigration
		*out = new(bool)
		**out = **in
	}
	in.Resources.DeepCopyInto(&out.Resources)
	out.Storage = in.Storage
	if in.TopologySpreadConstraints != nil {
		in, out := &in.TopologySpreadConstraints, &out.TopologySpreadConstraints
		*out = make([]v1.TopologySpreadConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.ExtraMounts.DeepCopyInto(&out.ExtraMounts)
	if in.Clustered != nil {
		in, out := &in.Clustered, &out.Clustered
		*out = new(bool)
		**out = **in
	}
	in.PodSecurity.DeepCopyInto(&out.PodSecurity)
	if in.StartupProbe != nil {
		in, out := &in.StartupProbe, &out.StartupProbe
		*out = new(v1.Probe)
		(*in).DeepCopyInto(*out)
	}
	if in.LivenessProbe != nil {
		in, out := &in.LivenessProbe, &out.LivenessProbe
		*out = new(v1.Probe)
		(*in).DeepCopyInto(*out)
	}
	if in.ReadinessProbe != nil {
		in, out := &in.ReadinessProbe, &out.ReadinessProbe
		*out = new(v1.Probe)
		(*in).DeepCopyInto(*out)
	}
	if in.EnableMetricsPlugin != nil {
		in, out := &in.EnableMetricsPlugin, &out.EnableMetricsPlugin
		*out = new(bool)
		**out = **in
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Affinity.DeepCopyInto(&out.Affinity)
	if in.PodSecurityContext != nil {
		in, out := &in.PodSecurityContext, &out.PodSecurityContext
		*out = new(v1.PodSecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PodDisruptionBudget != nil {
		in, out := &in.PodDisruptionBudget, &out.PodDisruptionBudget
		*out = new(policyv1.PodDisruptionBudgetSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RevisionHistoryLimit != nil {
		in, out := &in.RevisionHistoryLimit, &out.RevisionHistoryLimit
		*out = new(int32)
		**out = **in
	}
	if in.ContainerSecurityContext != nil {
		in, out := &in.ContainerSecurityContext, &out.ContainerSecurityContext
		*out = new(v1.SecurityContext)
		(*in).DeepCopyInto(*out)
	}
	if in.ExtraVolumes != nil {
		in, out := &in.ExtraVolumes, &out.ExtraVolumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumeMounts != nil {
		in, out := &in.ExtraVolumeMounts, &out.ExtraVolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraVolumeClaimTemplates != nil {
		in, out := &in.ExtraVolumeClaimTemplates, &out.ExtraVolumeClaimTemplates
		*out = make([]VolumeClaimTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentPlanType.
func (in *DeploymentPlanType) DeepCopy() *DeploymentPlanType {
	if in == nil {
		return nil
	}
	out := new(DeploymentPlanType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalConfigStatus) DeepCopyInto(out *ExternalConfigStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalConfigStatus.
func (in *ExternalConfigStatus) DeepCopy() *ExternalConfigStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExtraMountsType) DeepCopyInto(out *ExtraMountsType) {
	*out = *in
	if in.ConfigMaps != nil {
		in, out := &in.ConfigMaps, &out.ConfigMaps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExtraMountsType.
func (in *ExtraMountsType) DeepCopy() *ExtraMountsType {
	if in == nil {
		return nil
	}
	out := new(ExtraMountsType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestLoginModuleType) DeepCopyInto(out *GuestLoginModuleType) {
	*out = *in
	if in.GuestUser != nil {
		in, out := &in.GuestUser, &out.GuestUser
		*out = new(string)
		**out = **in
	}
	if in.GuestRole != nil {
		in, out := &in.GuestRole, &out.GuestRole
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestLoginModuleType.
func (in *GuestLoginModuleType) DeepCopy() *GuestLoginModuleType {
	if in == nil {
		return nil
	}
	out := new(GuestLoginModuleType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValueType) DeepCopyInto(out *KeyValueType) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValueType.
func (in *KeyValueType) DeepCopy() *KeyValueType {
	if in == nil {
		return nil
	}
	out := new(KeyValueType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeycloakLoginModuleType) DeepCopyInto(out *KeycloakLoginModuleType) {
	*out = *in
	if in.ModuleType != nil {
		in, out := &in.ModuleType, &out.ModuleType
		*out = new(string)
		**out = **in
	}
	in.Configuration.DeepCopyInto(&out.Configuration)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeycloakLoginModuleType.
func (in *KeycloakLoginModuleType) DeepCopy() *KeycloakLoginModuleType {
	if in == nil {
		return nil
	}
	out := new(KeycloakLoginModuleType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeycloakModuleConfigurationType) DeepCopyInto(out *KeycloakModuleConfigurationType) {
	*out = *in
	if in.Realm != nil {
		in, out := &in.Realm, &out.Realm
		*out = new(string)
		**out = **in
	}
	if in.RealmPublicKey != nil {
		in, out := &in.RealmPublicKey, &out.RealmPublicKey
		*out = new(string)
		**out = **in
	}
	if in.AuthServerUrl != nil {
		in, out := &in.AuthServerUrl, &out.AuthServerUrl
		*out = new(string)
		**out = **in
	}
	if in.SslRequired != nil {
		in, out := &in.SslRequired, &out.SslRequired
		*out = new(string)
		**out = **in
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.PublicClient != nil {
		in, out := &in.PublicClient, &out.PublicClient
		*out = new(bool)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]KeyValueType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UseResourceRoleMappings != nil {
		in, out := &in.UseResourceRoleMappings, &out.UseResourceRoleMappings
		*out = new(bool)
		**out = **in
	}
	if in.EnableCors != nil {
		in, out := &in.EnableCors, &out.EnableCors
		*out = new(bool)
		**out = **in
	}
	if in.CorsMaxAge != nil {
		in, out := &in.CorsMaxAge, &out.CorsMaxAge
		*out = new(int64)
		**out = **in
	}
	if in.CorsAllowedMethods != nil {
		in, out := &in.CorsAllowedMethods, &out.CorsAllowedMethods
		*out = new(string)
		**out = **in
	}
	if in.CorsAllowedHeaders != nil {
		in, out := &in.CorsAllowedHeaders, &out.CorsAllowedHeaders
		*out = new(string)
		**out = **in
	}
	if in.CorsExposedHeaders != nil {
		in, out := &in.CorsExposedHeaders, &out.CorsExposedHeaders
		*out = new(string)
		**out = **in
	}
	if in.ExposeToken != nil {
		in, out := &in.ExposeToken, &out.ExposeToken
		*out = new(bool)
		**out = **in
	}
	if in.BearerOnly != nil {
		in, out := &in.BearerOnly, &out.BearerOnly
		*out = new(bool)
		**out = **in
	}
	if in.AutoDetectBearerOnly != nil {
		in, out := &in.AutoDetectBearerOnly, &out.AutoDetectBearerOnly
		*out = new(bool)
		**out = **in
	}
	if in.ConnectionPoolSize != nil {
		in, out := &in.ConnectionPoolSize, &out.ConnectionPoolSize
		*out = new(int64)
		**out = **in
	}
	if in.AllowAnyHostName != nil {
		in, out := &in.AllowAnyHostName, &out.AllowAnyHostName
		*out = new(bool)
		**out = **in
	}
	if in.DisableTrustManager != nil {
		in, out := &in.DisableTrustManager, &out.DisableTrustManager
		*out = new(bool)
		**out = **in
	}
	if in.TrustStore != nil {
		in, out := &in.TrustStore, &out.TrustStore
		*out = new(string)
		**out = **in
	}
	if in.TrustStorePassword != nil {
		in, out := &in.TrustStorePassword, &out.TrustStorePassword
		*out = new(string)
		**out = **in
	}
	if in.ClientKeyStore != nil {
		in, out := &in.ClientKeyStore, &out.ClientKeyStore
		*out = new(string)
		**out = **in
	}
	if in.ClientKeyStorePassword != nil {
		in, out := &in.ClientKeyStorePassword, &out.ClientKeyStorePassword
		*out = new(string)
		**out = **in
	}
	if in.ClientKeyPassword != nil {
		in, out := &in.ClientKeyPassword, &out.ClientKeyPassword
		*out = new(string)
		**out = **in
	}
	if in.AlwaysRefreshToken != nil {
		in, out := &in.AlwaysRefreshToken, &out.AlwaysRefreshToken
		*out = new(bool)
		**out = **in
	}
	if in.RegisterNodeAtStartup != nil {
		in, out := &in.RegisterNodeAtStartup, &out.RegisterNodeAtStartup
		*out = new(bool)
		**out = **in
	}
	if in.RegisterNodePeriod != nil {
		in, out := &in.RegisterNodePeriod, &out.RegisterNodePeriod
		*out = new(int64)
		**out = **in
	}
	if in.TokenStore != nil {
		in, out := &in.TokenStore, &out.TokenStore
		*out = new(string)
		**out = **in
	}
	if in.TokenCookiePath != nil {
		in, out := &in.TokenCookiePath, &out.TokenCookiePath
		*out = new(string)
		**out = **in
	}
	if in.PrincipalAttribute != nil {
		in, out := &in.PrincipalAttribute, &out.PrincipalAttribute
		*out = new(string)
		**out = **in
	}
	if in.ProxyUrl != nil {
		in, out := &in.ProxyUrl, &out.ProxyUrl
		*out = new(string)
		**out = **in
	}
	if in.TurnOffChangeSessionIdOnLogin != nil {
		in, out := &in.TurnOffChangeSessionIdOnLogin, &out.TurnOffChangeSessionIdOnLogin
		*out = new(bool)
		**out = **in
	}
	if in.TokenMinimumTimeToLive != nil {
		in, out := &in.TokenMinimumTimeToLive, &out.TokenMinimumTimeToLive
		*out = new(int64)
		**out = **in
	}
	if in.MinTimeBetweenJwksRequests != nil {
		in, out := &in.MinTimeBetweenJwksRequests, &out.MinTimeBetweenJwksRequests
		*out = new(int64)
		**out = **in
	}
	if in.PublicKeyCacheTtl != nil {
		in, out := &in.PublicKeyCacheTtl, &out.PublicKeyCacheTtl
		*out = new(int64)
		**out = **in
	}
	if in.IgnoreOauthQueryParameter != nil {
		in, out := &in.IgnoreOauthQueryParameter, &out.IgnoreOauthQueryParameter
		*out = new(bool)
		**out = **in
	}
	if in.VerifyTokenAudience != nil {
		in, out := &in.VerifyTokenAudience, &out.VerifyTokenAudience
		*out = new(bool)
		**out = **in
	}
	if in.EnableBasicAuth != nil {
		in, out := &in.EnableBasicAuth, &out.EnableBasicAuth
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialPort != nil {
		in, out := &in.ConfidentialPort, &out.ConfidentialPort
		*out = new(int32)
		**out = **in
	}
	if in.RedirectRewriteRules != nil {
		in, out := &in.RedirectRewriteRules, &out.RedirectRewriteRules
		*out = make([]KeyValueType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeycloakModuleConfigurationType.
func (in *KeycloakModuleConfigurationType) DeepCopy() *KeycloakModuleConfigurationType {
	if in == nil {
		return nil
	}
	out := new(KeycloakModuleConfigurationType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginModuleReferenceType) DeepCopyInto(out *LoginModuleReferenceType) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Flag != nil {
		in, out := &in.Flag, &out.Flag
		*out = new(string)
		**out = **in
	}
	if in.Debug != nil {
		in, out := &in.Debug, &out.Debug
		*out = new(bool)
		**out = **in
	}
	if in.Reload != nil {
		in, out := &in.Reload, &out.Reload
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginModuleReferenceType.
func (in *LoginModuleReferenceType) DeepCopy() *LoginModuleReferenceType {
	if in == nil {
		return nil
	}
	out := new(LoginModuleReferenceType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginModulesType) DeepCopyInto(out *LoginModulesType) {
	*out = *in
	if in.PropertiesLoginModules != nil {
		in, out := &in.PropertiesLoginModules, &out.PropertiesLoginModules
		*out = make([]PropertiesLoginModuleType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GuestLoginModules != nil {
		in, out := &in.GuestLoginModules, &out.GuestLoginModules
		*out = make([]GuestLoginModuleType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KeycloakLoginModules != nil {
		in, out := &in.KeycloakLoginModules, &out.KeycloakLoginModules
		*out = make([]KeycloakLoginModuleType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginModulesType.
func (in *LoginModulesType) DeepCopy() *LoginModulesType {
	if in == nil {
		return nil
	}
	out := new(LoginModulesType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementSecuritySettingsType) DeepCopyInto(out *ManagementSecuritySettingsType) {
	*out = *in
	if in.HawtioRoles != nil {
		in, out := &in.HawtioRoles, &out.HawtioRoles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Connector.DeepCopyInto(&out.Connector)
	in.Authorisation.DeepCopyInto(&out.Authorisation)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementSecuritySettingsType.
func (in *ManagementSecuritySettingsType) DeepCopy() *ManagementSecuritySettingsType {
	if in == nil {
		return nil
	}
	out := new(ManagementSecuritySettingsType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectMeta) DeepCopyInto(out *ObjectMeta) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectMeta.
func (in *ObjectMeta) DeepCopy() *ObjectMeta {
	if in == nil {
		return nil
	}
	out := new(ObjectMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PermissionType) DeepCopyInto(out *PermissionType) {
	*out = *in
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PermissionType.
func (in *PermissionType) DeepCopy() *PermissionType {
	if in == nil {
		return nil
	}
	out := new(PermissionType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSecurityType) DeepCopyInto(out *PodSecurityType) {
	*out = *in
	if in.ServiceAccountName != nil {
		in, out := &in.ServiceAccountName, &out.ServiceAccountName
		*out = new(string)
		**out = **in
	}
	if in.RunAsUser != nil {
		in, out := &in.RunAsUser, &out.RunAsUser
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSecurityType.
func (in *PodSecurityType) DeepCopy() *PodSecurityType {
	if in == nil {
		return nil
	}
	out := new(PodSecurityType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PropertiesLoginModuleType) DeepCopyInto(out *PropertiesLoginModuleType) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]UserType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PropertiesLoginModuleType.
func (in *PropertiesLoginModuleType) DeepCopy() *PropertiesLoginModuleType {
	if in == nil {
		return nil
	}
	out := new(PropertiesLoginModuleType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueConfigurationType) DeepCopyInto(out *QueueConfigurationType) {
	*out = *in
	if in.IgnoreIfExists != nil {
		in, out := &in.IgnoreIfExists, &out.IgnoreIfExists
		*out = new(bool)
		**out = **in
	}
	if in.RoutingType != nil {
		in, out := &in.RoutingType, &out.RoutingType
		*out = new(string)
		**out = **in
	}
	if in.FilterString != nil {
		in, out := &in.FilterString, &out.FilterString
		*out = new(string)
		**out = **in
	}
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.MaxConsumers != nil {
		in, out := &in.MaxConsumers, &out.MaxConsumers
		*out = new(int32)
		**out = **in
	}
	if in.Exclusive != nil {
		in, out := &in.Exclusive, &out.Exclusive
		*out = new(bool)
		**out = **in
	}
	if in.GroupRebalance != nil {
		in, out := &in.GroupRebalance, &out.GroupRebalance
		*out = new(bool)
		**out = **in
	}
	if in.GroupRebalancePauseDispatch != nil {
		in, out := &in.GroupRebalancePauseDispatch, &out.GroupRebalancePauseDispatch
		*out = new(bool)
		**out = **in
	}
	if in.GroupBuckets != nil {
		in, out := &in.GroupBuckets, &out.GroupBuckets
		*out = new(int32)
		**out = **in
	}
	if in.GroupFirstKey != nil {
		in, out := &in.GroupFirstKey, &out.GroupFirstKey
		*out = new(string)
		**out = **in
	}
	if in.LastValue != nil {
		in, out := &in.LastValue, &out.LastValue
		*out = new(bool)
		**out = **in
	}
	if in.LastValueKey != nil {
		in, out := &in.LastValueKey, &out.LastValueKey
		*out = new(string)
		**out = **in
	}
	if in.NonDestructive != nil {
		in, out := &in.NonDestructive, &out.NonDestructive
		*out = new(bool)
		**out = **in
	}
	if in.PurgeOnNoConsumers != nil {
		in, out := &in.PurgeOnNoConsumers, &out.PurgeOnNoConsumers
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ConsumersBeforeDispatch != nil {
		in, out := &in.ConsumersBeforeDispatch, &out.ConsumersBeforeDispatch
		*out = new(int32)
		**out = **in
	}
	if in.DelayBeforeDispatch != nil {
		in, out := &in.DelayBeforeDispatch, &out.DelayBeforeDispatch
		*out = new(int64)
		**out = **in
	}
	if in.ConsumerPriority != nil {
		in, out := &in.ConsumerPriority, &out.ConsumerPriority
		*out = new(int32)
		**out = **in
	}
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.AutoDeleteDelay != nil {
		in, out := &in.AutoDeleteDelay, &out.AutoDeleteDelay
		*out = new(int64)
		**out = **in
	}
	if in.AutoDeleteMessageCount != nil {
		in, out := &in.AutoDeleteMessageCount, &out.AutoDeleteMessageCount
		*out = new(int64)
		**out = **in
	}
	if in.RingSize != nil {
		in, out := &in.RingSize, &out.RingSize
		*out = new(int64)
		**out = **in
	}
	if in.ConfigurationManaged != nil {
		in, out := &in.ConfigurationManaged, &out.ConfigurationManaged
		*out = new(bool)
		**out = **in
	}
	if in.Temporary != nil {
		in, out := &in.Temporary, &out.Temporary
		*out = new(bool)
		**out = **in
	}
	if in.AutoCreateAddress != nil {
		in, out := &in.AutoCreateAddress, &out.AutoCreateAddress
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueConfigurationType.
func (in *QueueConfigurationType) DeepCopy() *QueueConfigurationType {
	if in == nil {
		return nil
	}
	out := new(QueueConfigurationType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSelector) DeepCopyInto(out *ResourceSelector) {
	*out = *in
	if in.APIGroup != nil {
		in, out := &in.APIGroup, &out.APIGroup
		*out = new(string)
		**out = **in
	}
	if in.Kind != nil {
		in, out := &in.Kind, &out.Kind
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSelector.
func (in *ResourceSelector) DeepCopy() *ResourceSelector {
	if in == nil {
		return nil
	}
	out := new(ResourceSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceTemplate) DeepCopyInto(out *ResourceTemplate) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(ResourceSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Patch != nil {
		in, out := &in.Patch, &out.Patch
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceTemplate.
func (in *ResourceTemplate) DeepCopy() *ResourceTemplate {
	if in == nil {
		return nil
	}
	out := new(ResourceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoleAccessType) DeepCopyInto(out *RoleAccessType) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.AccessList != nil {
		in, out := &in.AccessList, &out.AccessList
		*out = make([]DefaultAccessType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoleAccessType.
func (in *RoleAccessType) DeepCopy() *RoleAccessType {
	if in == nil {
		return nil
	}
	out := new(RoleAccessType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityDomainsType) DeepCopyInto(out *SecurityDomainsType) {
	*out = *in
	in.BrokerDomain.DeepCopyInto(&out.BrokerDomain)
	in.ConsoleDomain.DeepCopyInto(&out.ConsoleDomain)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityDomainsType.
func (in *SecurityDomainsType) DeepCopy() *SecurityDomainsType {
	if in == nil {
		return nil
	}
	out := new(SecurityDomainsType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySettingsType) DeepCopyInto(out *SecuritySettingsType) {
	*out = *in
	if in.Broker != nil {
		in, out := &in.Broker, &out.Broker
		*out = make([]BrokerSecuritySettingType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Management.DeepCopyInto(&out.Management)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySettingsType.
func (in *SecuritySettingsType) DeepCopy() *SecuritySettingsType {
	if in == nil {
		return nil
	}
	out := new(SecuritySettingsType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageType) DeepCopyInto(out *StorageType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageType.
func (in *StorageType) DeepCopy() *StorageType {
	if in == nil {
		return nil
	}
	out := new(StorageType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeStatus) DeepCopyInto(out *UpgradeStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeStatus.
func (in *UpgradeStatus) DeepCopy() *UpgradeStatus {
	if in == nil {
		return nil
	}
	out := new(UpgradeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserType) DeepCopyInto(out *UserType) {
	*out = *in
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserType.
func (in *UserType) DeepCopy() *UserType {
	if in == nil {
		return nil
	}
	out := new(UserType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionStatus) DeepCopyInto(out *VersionStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionStatus.
func (in *VersionStatus) DeepCopy() *VersionStatus {
	if in == nil {
		return nil
	}
	out := new(VersionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeClaimTemplate) DeepCopyInto(out *VolumeClaimTemplate) {
	*out = *in
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeClaimTemplate.
func (in *VolumeClaimTemplate) DeepCopy() *VolumeClaimTemplate {
	if in == nil {
		return nil
	}
	out := new(VolumeClaimTemplate)
	in.DeepCopyInto(out)
	return out
}
